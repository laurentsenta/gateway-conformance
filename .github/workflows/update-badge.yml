# Note: this workflow requires the repository to give Write access to Github Workflows.
# in Settings > Actions > General > Workflow permissions

permissions:
  contents: write
name: Update Badge

on:
  workflow_run:
    workflows:
      - Test Production (e2e)
      - Test Dev (e2e)
    types:
      - completed
    branches:
      - main

defaults:
  run:
    shell: bash

concurrency:
  # Do NOT cancel on progress jobs, on the contrary, we want to keep all the runs because
  # we might need to update multiple workflows.
  group: ${{ github.workflow }}

jobs:
  update-badge:
    runs-on: ubuntu-latest
    steps:
      - uses: pl-strflt/job-summary-url-action@v1
        id: metadata
        with:
          workflow: ${{ github.event.workflow.path }}
          run_id: ${{ github.event.workflow_run.id }}
          run_attempt: ${{ github.event.workflow_run.run_attempt }}
          job: aggregate
      - uses: actions/checkout@v3
      - id: update
        uses: actions/github-script@v6
        env:
          WORKFLOW_PATH: ${{ github.event.workflow.path }}
          BADGE_URL: ${{ github.event.workflow.badge_url }}
          SUMMARY_URL: ${{ steps.metadata.outputs.job_summary_url }}
        with:
          script: |
            const fs = require('fs')

            const workflowPath = process.env.WORKFLOW_PATH
            const badgeURL = process.env.BADGE_URL
            const refName = process.env.GITHUB_REF_NAME
            const summaryURL = process.env.SUMMARY_URL

            console.log(`
              workflowPath: ${workflowPath}
              badgeURL: ${badgeURL}
              refName: ${refName}
              summaryURL: ${summaryURL}
            `)

            function escapeRegExp(string) {
              return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
            }

            const searchValue = new RegExp(`\\[!\\[([^\\]]+)\\]\\(.*${escapeRegExp(badgeURL)}.*\\)\\]\\(.*\\)`, 'g')
            const replaceValue = `[![$1](${badgeURL}?branch=${refName})](${summaryURL})`

            console.log(`Searching for: ${searchValue}`)
            console.log(`To replace it with: ${replaceValue}`)

            const readme = fs.readFileSync('README.md').toString()
            const updatedReadme = readme.replace(searchValue, replaceValue)

            if (readme !== updatedReadme) {
              console.log('Updating README')
              fs.writeFileSync('README.md', updatedReadme)
              return true
            } else {
              console.log('README does not need to be updated')
              return false
            }
      # https://github.com/orgs/community/discussions/26560
      - if: steps.update.outputs.result == 'true'
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - if: steps.update.outputs.result == 'true'
        run: |
          git add README.md
          git commit -m 'chore: update the link to the interop dashboard [skip ci]'
          git push